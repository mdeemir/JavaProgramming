Java Day41
Topics: Exceptions Intro

Package name: day41_Exceptions


Access Modifiers:
		public > protected > default > private (private variable ve metodları sub class inherit edemez asla)


Final Keyword: unchangable   --- default value si yok. tanımlamak zaorundasın. cons ile yapabilirsin ONCE AND FOREVER

		Variables: can not be reassigned

		Methods: can not be overridden. (overload herzaman yapılabilir dikkat)

		Classes: can not be inherited (can not be parent)


Exceptions Topic:
		1. Unchecked vs Checked
		2. try & catch blocks
		3. Multi-catch block
		4. finally block

		//kod yazarken veya çalıştırırken ortaya çıkan istenmeyen veya beklenmeyen olaylar (errors or bugs)
          kontrol edilebilir ve kotrol edilemez olmak üzere ikiye ayrılır.
          programın cokmesini enlemek için kod yazmalısın.
          	1)kontrol eilemeyen istisnalar
          		sadece program çalıştırıldıgında ortayay çıkar
          		kontrol edilmesi dahazor
          		runtime exception parent class ı içinde düzenlesin (parent class runtime exception olur)
          		        sub class ları aritmetik exception, illegal argument , out of bound vs.
           2) kontroş edilebilir istisnalar
                compile time da yani kod yazarken. complier ın check edebileceği istisnalar (;, { vs.)
                biz onları işlemesek bile derlenir
                runtime exception ile bir IS A bağlantısı yoktur


OutOfMemoryError: heap memory is full
        if else blok a benzer sadece biri çalışır. birbiribnden ayrı yazılamaz bağlı birbiirne ikisi try-cath


Exceptions: unexpected or unwanted events

		Unchecked (unexpected event): occurs during the runtime

					all the RuntimeExceptions are unchecked exceptions

		checked (unwanted event): occurs during the compile time

					all the exceptions that are not RuntimeExceptions are checked exception



Exception handlings:

		1. Try & Catch blocks: used for handling checked and unchecked exceptions

						try{

							exception code

						}catch(ExceptionClass  e){

							e.printStackTrace();

						}


			Multi-catch block: parent exception type can not be placed before the child exception type (sadece unchecked da zaten checked da biliyoraun
			                    multi branch if else blok gibi
			                    tek kural parent class ı (RunTime Exception) önce child ı sonra yazma. child olanı önce yaz

			finally block: always gets executed regardless of the exception is being handled or not handled
			                // finally bloğu ensona yazmalısın cath arasına yazma

							to stop the execution of the finally block: Syste.exit(0)


Interview Question:

		final vs finally vs finalize



next Thursday:
		5. throws keyword
		6. throw keyword
		7. Custom Exception


Next Next Monday (Jan 31st):
	OOP Abstraction




	OOP Polymorphism




